// Generated by data binding compiler. Do not edit!
package launchenthusiast.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import java.lang.Deprecated;
import java.lang.Object;
import java.lang.String;
import launchenthusiast.R;

public abstract class ThrustInfoLayoutBinding extends ViewDataBinding {
  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final TextView seaLevelThrust;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView7;

  @NonNull
  public final TextView textView8;

  @NonNull
  public final ConstraintLayout thrustConstraint;

  @NonNull
  public final TextView thrustUnit;

  @NonNull
  public final TextView vacuumThrust;

  @Bindable
  protected String mTitle;

  protected ThrustInfoLayoutBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ConstraintLayout constraintLayout, TextView seaLevelThrust, TextView textView2,
      TextView textView7, TextView textView8, ConstraintLayout thrustConstraint,
      TextView thrustUnit, TextView vacuumThrust) {
    super(_bindingComponent, _root, _localFieldCount);
    this.constraintLayout = constraintLayout;
    this.seaLevelThrust = seaLevelThrust;
    this.textView2 = textView2;
    this.textView7 = textView7;
    this.textView8 = textView8;
    this.thrustConstraint = thrustConstraint;
    this.thrustUnit = thrustUnit;
    this.vacuumThrust = vacuumThrust;
  }

  public abstract void setTitle(@Nullable String title);

  @Nullable
  public String getTitle() {
    return mTitle;
  }

  @NonNull
  public static ThrustInfoLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.thrust_info_layout, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ThrustInfoLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ThrustInfoLayoutBinding>inflateInternal(inflater, R.layout.thrust_info_layout, root, attachToRoot, component);
  }

  @NonNull
  public static ThrustInfoLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.thrust_info_layout, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ThrustInfoLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ThrustInfoLayoutBinding>inflateInternal(inflater, R.layout.thrust_info_layout, null, false, component);
  }

  public static ThrustInfoLayoutBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ThrustInfoLayoutBinding bind(@NonNull View view, @Nullable Object component) {
    return (ThrustInfoLayoutBinding)bind(component, view, R.layout.thrust_info_layout);
  }
}
